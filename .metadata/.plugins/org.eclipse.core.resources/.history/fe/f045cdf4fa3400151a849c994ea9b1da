package com.example.myrssreader;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;

import com.example.rssnews.domain.RSSFeed;
import com.example.rssnews.domain.RSSItem;
import com.example.rssnews.util.RSSHandler;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.ActionBarActivity;
import android.view.Gravity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Toast;


public class MainActivity extends ActionBarActivity implements OnItemClickListener{

	public final String RSS_URL = "http://news.163.com/special/00011K6L/rss_newstop.xml";
	private String currentRssUrl = RSS_URL;
	public final String TAG = "RSS Reader";
	public RSSFeed feed = null;


    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        new MyTask().execute();
    }

    private class MyTask extends AsyncTask<Void, Void, Void>{

    	@Override
    	protected Void doInBackground(Void... arg0) {
    	   try {
		    	    URL rssUrl = new URL("http://news.163.com/special/00011K6L/rss_sh.xml");
		    	    SAXParserFactory mySAXParserFactory = SAXParserFactory.newInstance();
		    	    SAXParser mySAXParser = mySAXParserFactory.newSAXParser();
		    	    XMLReader myXMLReader = mySAXParser.getXMLReader();

		    	    RSSHandler myRSSHandler = new RSSHandler();
		    	    myXMLReader.setContentHandler(myRSSHandler);

		    	    InputSource myInputSource = new InputSource(rssUrl.openStream());
		    	    myXMLReader.parse(myInputSource);

		    	    MainActivity.this.feed = myRSSHandler.getRSSFeed();
	    	   } catch (MalformedURLException e) {
	    	    e.printStackTrace();
	    	   } catch (ParserConfigurationException e) {
	    	    e.printStackTrace();
	    	   } catch (SAXException e) {
	    	    e.printStackTrace();
	    	   } catch (IOException e) {
	    	    e.printStackTrace();
	    	   }

	    	   return null;
    	  }

    	@Override
    	  protected void onPostExecute(Void result) {

    		showListView();
    		super.onPostExecute(result);
    	  }
    }


    private void showListView(){

    	ListView itemlist = (ListView) this.findViewById(R.id.itemlist);
    	if(null == feed){

    		setTitle("访问的RSS无效");
    		return ;
    	}

    	SimpleAdapter adapter = new SimpleAdapter(this,
    			feed.getAllItems(), android.R.layout.simple_list_item_2, new String[]{
    			RSSItem.TITLE, RSSItem.PUBDATE }, new int[] {
    			android.R.id.text1, android.R.id.text2 });

    	itemlist.setAdapter(adapter);
    	itemlist.setOnItemClickListener(this);
    	itemlist.setSelection(0);
    }

    public void onItemClick(AdapterView parent, View v, int position, long id) {// itemclick事件代理方法{

        Intent itemintent = new Intent(this, ActivityShowDescription.class);// 构建一个“意图”，用于指向activity

        Bundle b = new Bundle();// 构建buddle，并将要传递参数都放入buddle
        b.putString("title", feed.getItem(position).getTitle());
        b.putString("description", feed.getItem(position).getDescription());
        b.putString("link", feed.getItem(position).getLink());
        b.putString("pubdate", feed.getItem(position).getPubdate());
        itemintent.putExtra("Android.intent.extra.RSSItem", b); // 用android.intent.extra.INTENT的名字来传递参数
        startActivityForResult(itemintent, 0);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }

        if(id == R.id.about){

        	AlertDialog.Builder aboutDialog = new AlertDialog.Builder(this);
        	aboutDialog.setTitle(R.string.aboutme);
        	aboutDialog.setMessage(R.string.about_info);
        	aboutDialog.setPositiveButton("确定", new OnClickListener(){
        		@Override
        		public void onClick(DialogInterface dialog, int which){

        			dialog.dismiss();
        		}});

        	aboutDialog.create().show();

        	return true;
        }

        return super.onOptionsItemSelected(item);
    }

    private void refreshRSS(){

    	if(this.RSS_URL == null){

    		showTips("请选择一个RSS源！");
    	}
    	/*
    	 if (this.currentRssurl == null) {

    		 125:             showTips("chose a rss url first!");

    		 126:         } else {

    		 127:             RssSaxParser rssparser = new RssSaxParser(this.currentRssurl);

    		 128:             System.out.println(this.currentRssurl);

    		 129:             this.messages = rssparser.parse();

    		 130:

    		 131:             System.out.println("messages.size()" + this.messages.size());

    		 132:             List<String> titles = new ArrayList<String>(this.messages.size());

    		 133:             for (Message msg : this.messages) {

    		 134:                 titles.add(msg.getTitle());

    		 135:             }

    		 136:             ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,

    		 137:                     R.layout.newstitle, titles);

    		 138:             this.setListAdapter(adapter);*/
    }

    private void showTips(String tip) {

    	 Toast toast = Toast.makeText(this, tip, Toast.LENGTH_SHORT);
    	 toast.setGravity(Gravity.CENTER, 0, 10);
    	 toast.show();
    }

}