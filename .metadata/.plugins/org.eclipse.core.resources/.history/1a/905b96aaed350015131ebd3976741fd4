package com.example.myrssreader;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;

import com.example.rssnews.domain.RSSFeed;
import com.example.rssnews.domain.RSSItem;
import com.example.rssnews.util.RSSHandler;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ListActivity;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.os.Bundle;
import android.provider.DocumentsContract.Document;
import android.support.v7.app.ActionBarActivity;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.webkit.WebView;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;


public class MainActivity extends ActionBarActivity implements OnItemClickListener{
//public class MainActivity extends ListActivity implements OnItemClickListener{

	private final String RSS_URL = "http://news.163.com/special/00011K6L/rss_newstop.xml";
	private String currentRssUrl = RSS_URL;
	private final String TAG = "RSS Reader";
	private RSSFeed feed = null;

	// 保存RSS源信息(URL、中文名)
	List<HashMap<String, Object>> rssInfo = new ArrayList<HashMap<String, Object>>();

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        new MyTask().execute();
    }

    private class MyTask extends AsyncTask<Void, Void, Void>{

    	@Override
    	protected Void doInBackground(Void... arg0) {
    	   try {
		    	    URL rssUrl = new URL("http://news.163.com/special/00011K6L/rss_sh.xml");
		    	    SAXParserFactory mySAXParserFactory = SAXParserFactory.newInstance();
		    	    SAXParser mySAXParser = mySAXParserFactory.newSAXParser();
		    	    XMLReader myXMLReader = mySAXParser.getXMLReader();

		    	    RSSHandler myRSSHandler = new RSSHandler();
		    	    myXMLReader.setContentHandler(myRSSHandler);

		    	    InputSource myInputSource = new InputSource(rssUrl.openStream());
		    	    myXMLReader.parse(myInputSource);

		    	    MainActivity.this.feed = myRSSHandler.getRSSFeed();
	    	   } catch (MalformedURLException e) {
	    	    e.printStackTrace();
	    	   } catch (ParserConfigurationException e) {
	    	    e.printStackTrace();
	    	   } catch (SAXException e) {
	    	    e.printStackTrace();
	    	   } catch (IOException e) {
	    	    e.printStackTrace();
	    	   }

	    	   return null;
    	  }

    	@Override
    	  protected void onPostExecute(Void result) {

    		showListView();
    		super.onPostExecute(result);
    	  }
    }


    private void showListView(){

    	ListView itemlist = (ListView) this.findViewById(R.id.itemlist);
    	if(null == feed){

    		setTitle("访问的RSS无效");
    		return ;
    	}
    	/*
    	SimpleAdapter adapter = new SimpleAdapter(this,
    			feed.getAllItems(), android.R.layout.simple_list_item_2, new String[]{
    			RSSItem.TITLE, RSSItem.PUBDATE }, new int[] {
    			android.R.id.text1, android.R.id.text2 });
    	 */
    	SimpleAdapter adapter = new SimpleAdapter(this,
    			feed.getAllItems(), R.layout.medium_show, new String[]{
    			RSSItem.TITLE, RSSItem.PUBDATE }, new int[] {
    			android.R.id.text1, android.R.id.text2 });

    	itemlist.setAdapter(adapter);
    	itemlist.setOnItemClickListener(this);
    	itemlist.setSelection(0);
    }

    public void onItemClick(AdapterView parent, View v, int position, long id) {// itemclick事件代理方法{

        Intent itemintent = new Intent(this, ActivityShowDescription.class);// 构建一个“意图”，用于指向activity

        Bundle b = new Bundle();// 构建buddle，并将要传递参数都放入buddle
        b.putString("title", feed.getItem(position).getTitle());
        b.putString("description", feed.getItem(position).getDescription());
        b.putString("link", feed.getItem(position).getLink());
        b.putString("pubdate", feed.getItem(position).getPubdate());
        itemintent.putExtra("Android.intent.extra.RSSItem", b); // 用android.intent.extra.INTENT的名字来传递参数
        startActivityForResult(itemintent, 0);


    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        switch(id){

        case R.id.action_refresh:
        	return true;

        case R.id.about:
        	aboutMsg();
        	return true;

        case R.id.action_settings:
        	settingMsg();
        	return true;

        case R.id.action_description:

        	descriptionManagement();
        	return true;
        }

        return super.onOptionsItemSelected(item);
    }

    private void refreshRSS(){

    	if(currentRssUrl == null){

    		showTips("请选择一个RSS源！");
    	} else{

    		new MyTask().execute();
    	}
    }

    private void showTips(String tip) {

    	 Toast toast = Toast.makeText(this, tip, Toast.LENGTH_SHORT);
    	 toast.setGravity(Gravity.CENTER, 0, 10);
    	 toast.show();
    }

    private void aboutMsg(){	// 处理关于信息

    	AlertDialog.Builder aboutDialog = new AlertDialog.Builder(this);
    	aboutDialog.setTitle(R.string.aboutme);
    	aboutDialog.setMessage(R.string.about_info);
    	aboutDialog.setPositiveButton("确定", new OnClickListener(){
    		@Override
    		public void onClick(DialogInterface dialog, int which){

    			dialog.dismiss();
    		}});

    	aboutDialog.create().show();
    }

    private void settingMsg(){		// 处理设置信息

    	LayoutInflater layoutInflater = LayoutInflater.from(this);
    	View mySettingView = layoutInflater.inflate(R.layout.setting_show, null);

    	final RadioGroup rg = (RadioGroup) mySettingView.findViewById(R.id.text_size);
        final RadioButton mRadio1 = (RadioButton) mySettingView.findViewById(R.id.text_small);
        final RadioButton mRadio2 = (RadioButton) mySettingView.findViewById(R.id.text_medium);
        final RadioButton mRadio3 = (RadioButton) mySettingView.findViewById(R.id.text_big);

        // 字体大小
        final ListView itemlist = (ListView) this.findViewById(R.id.itemlist);

    	AlertDialog.Builder settingDialog = new AlertDialog.Builder(this);
    	settingDialog.setView(mySettingView);
    	settingDialog.setTitle(R.string.settings);
    	settingDialog.setPositiveButton("确定", new OnClickListener(){
    		@Override
    		public void onClick(DialogInterface dialog, int which){

    			// get the clicked button.
    			// 测试button是否被选中
    	        String str = new String();
    			int selectId = rg.getCheckedRadioButtonId();
    			if(selectId == mRadio1.getId()){	// 小字体

    		    	if(null == feed){

    		    		setTitle("访问的RSS无效");
    		    		return ;
    		    	}
    				str = "small";
    		    	SimpleAdapter adapter = new SimpleAdapter(MainActivity.this,
    		    			feed.getAllItems(), R.layout.small_show, new String[]{
    		    			RSSItem.TITLE, RSSItem.PUBDATE }, new int[] {
    		    			android.R.id.text1, android.R.id.text2 });

    		    	itemlist.setAdapter(adapter);
    		    	itemlist.setOnItemClickListener(MainActivity.this);
    		    	itemlist.setSelection(0);

    			} else if(selectId == mRadio2.getId()){		// 中等字体
    					str = "medium";
    					if(null == feed){

        		    		setTitle("访问的RSS无效");
        		    		return ;
        		    	}
        				str = "small";
        		    	SimpleAdapter adapter = new SimpleAdapter(MainActivity.this,
        		    			feed.getAllItems(), R.layout.medium_show, new String[]{
        		    			RSSItem.TITLE, RSSItem.PUBDATE }, new int[] {
        		    			android.R.id.text1, android.R.id.text2 });

        		    	itemlist.setAdapter(adapter);
        		    	itemlist.setOnItemClickListener(MainActivity.this);
        		    	itemlist.setSelection(0);
    			} else{			// 大字体
    					str = "big";
    			}

    		}});

    	settingDialog.create().show();
    }

    private void descriptionManagement(){

    	LayoutInflater layoutInflater = LayoutInflater.from(this);
    	View mySettingView = layoutInflater.inflate(R.layout.description_show, null);

    	AlertDialog.Builder settingDialog = new AlertDialog.Builder(this);
    	settingDialog.setView(mySettingView);
    	settingDialog.setTitle("订阅管理");

    	settingDialog.setPositiveButton("确定", new OnClickListener(){
    		@Override
    		public void onClick(DialogInterface dialog, int which){

    		}});

    	settingDialog.create().show();

    	// 处理订阅
    	final EditText rssEdit = (EditText) mySettingView.findViewById(R.id.description_url);
    	final EditText rssName = (EditText) mySettingView.findViewById(R.id.description_name);
    	//final String rssUrlStr = rssEdit.getText().toString();
    	//final String rssNameStr = rssName.getText().toString();
    	final Button rssBtn = (Button) mySettingView.findViewById(R.id.description_btn);
    	rssBtn.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				final String rssUrlStr = rssEdit.getText().toString();
		    	final String rssNameStr = rssName.getText().toString();

		    	SharedPreferences mySharedPreferences = getSharedPreferences("url_file", Activity.MODE_PRIVATE);
		    	SharedPreferences.Editor editor = mySharedPreferences.edit();
		    	editor.putString("rssUrl", rssUrlStr);
		    	editor.putString("rssName", rssNameStr);
		    	editor.commit();
/*
		    	HashMap<String, Object> item = new HashMap<String, Object>();
		    	item.put("RSSUrl", rssUrlStr);
		    	item.put("RSSName", rssNameStr);

		    	Vector<Vector> vRss = new Vector<Vector>();
		    	Vector<String> v1 = new Vector<String>();
		    	v1.addElement("hello");
		    	v1.addElement("world");
		    	vRss.addElement(v1);

		    	Vector<String> vel = vRss.elementAt(0);
*/
		    	String testStr = mySharedPreferences.getString("rssUrl", "");
				showTips(testStr);


			}
		});



    }

}